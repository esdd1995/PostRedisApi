version: "3.8"  # Specify Docker Compose version

services:
  # Web API service
  webapi:
    build: .  # Build the image from the current directory (where Dockerfile resides)
    ports:
      - "8080:8080"  # Expose port 5000 of the container to port 5000 of the host
    depends_on:
      - postgres  # Wait for Postgres to be ready before starting webapi
      - redis    # Wait for Redis to be ready before starting webapi


  # Postgres database
  postgres:
    image: postgres:alpine3.20  # Use the official Postgres image with Alpine 3.20 base
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: test123  # Set the Postgres password (matches your appsettings.json)
      POSTGRES_USER: postgres  # Set the Postgres username (matches your appsettings.json)
      POSTGRES_DB: pstest  # Set the Postgres database name (matches your appsettings.json)
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist Postgres data volume


  # Redis server
  redis:
    image: redis:latest  # Use the official latest Redis image
    ports:
      - "6379:6379"  # Expose Redis port 6379 to the host
    volumes:
      - redis-data:/data  # Persist Redis data volume

volumes:
  # Define volumes for persistent data
  postgres-data: {}
  redis-data: {}
